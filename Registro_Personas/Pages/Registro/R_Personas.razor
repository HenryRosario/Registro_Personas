@page "/Personas"
@page "/Personas/{PersonaId:int}"
@inject PersonasBLL PersonasBLL
@inject NotificationService notificationService

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
<h4 Registro personas></h4>
<EditForm Model="persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro de Personas</h3>
        </div>
        <div class="card-body">
        @*PersonaId*@
             <div class="form-group">
                <label>PersonaId</label>
                <InputNumber @bind-Value="persona.PersonaId" class="form-control" />
                <ValidationMessage For="@(() => persona.PersonaId)" />
            </div>
        @*NombreCompleto*@
            <div class="form-group">
                <label>Nombre Completo</label>
                <InputText @bind-Value="persona.NombreCompleto" class="form-control" />
                <ValidationMessage For="@(() => persona.NombreCompleto)" />
            </div>

        @*Telefono*@
           <div class="form-group">
                <label>Telefono</label>
                <InputNumber @bind-Value="persona.Telefono" class="form-control" />
                <ValidationMessage For="@(() => persona.Telefono)" />
            </div>


        @*Celular*@
            <div class="form-group">
                <label>Celular</label>
                <InputNumber @bind-Value="persona.Celular" class="form-control" />
                <ValidationMessage For="@(() => persona.Celular)" />
            </div>
        

        @*Email*@
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="persona.Email" class="form-control" />
                <ValidationMessage For="@(() => persona.Email)" />
            </div>

        @*Direccion*@
            <div class="form-group">
                <label>Direcci√≥n</label>
                <InputText @bind-Value="persona.Direccion" class="form-control" />
                <ValidationMessage For="@(() => persona.Direccion)" />
            </div>

        @*FechaNacimiento*@
            <div class="form-group">
                <label>Fecha De Nacimiento</label>
                <InputDate @bind-Value="persona.FechaNacimiento" class="form-control" />
                <ValidationMessage For="@(() => persona.FechaNacimiento)" />
            </div>

            @*OcupacionId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>OcupacionId</label>
                        <div class="input-group">
                            <InputSelect @bind-Value="persona.OcupacionId" class="form-control col-4" />
                            <div class="input-group-append">
                               
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            </div>
            </div>
        


        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button"  class="btn btn-lg btn-primary bi bi-file-earmark-plus" @onclick="Nuevo"> Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success bi bi-file-earmark"> Guardar</button>
                <button type="button" class="btn btn-lg btn-danger bi bi-trash" @onclick="Eliminar"> Eliminar</button>
                
            </div>
        </div>
    @* </div> *@
</EditForm>


@code{

[Parameter]
public int PersonaId { get; set; }

public Personas persona  = new Personas();

public string mensaje { get; set; } = "";

protected override void OnInitialized()
    {
        if (PersonaId > 0)
        {
            this.persona.PersonaId = PersonaId;
        }
    }
 public void Nuevo()
    {
        mensaje = "";
        persona = new Personas();
    }

bool Validar()
    {
        return persona.NombreCompleto.Contains(".");
    }
public void Guardar()
    {
       
        bool guardo = PersonasBLL.Guardar(persona);

        if (guardo)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
            Nuevo();
        }
        
    }
 public  void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(persona);

        if (elimino)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Eliminado correctamente"
            });
            Nuevo();
        }
      
    }

     void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);

    }

}
